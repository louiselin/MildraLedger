<!DOCTYPE html>
<html>

<head>
    <%- include('base/head') %>
        <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<body>
    <header>
        <%- include('base/header', user); %>
    </header>

    <div class="container">
        <div class="page-header text-center">
            <h1><span class="fa fa-home fa-fw"></span> Ledger</h1>
        </div>
    </div>
    <div class="col-sm-2 sidebar-main" id="sidebar" role="navigation">
        <ul class="nav sidebar" id="sideul">
            <li class="sideli active"><a data-toggle="tab" href="#txs_detail-tab"><i class="fa fa-file-code-o" aria-hidden="true"></i> Transaction Details</a></li>
            <li class="sideli"><a data-toggle="tab" href="#data_vis-tab"><i class="fa fa-bar-chart-o" aria-hidden="true"></i> Data Vistulization</a></li>
        </ul>
    </div>

    <div class="col-sm-9 tab-content">
        <div id="txs_detail-tab" class="tab-pane fade in active">
             <table id="txs-woff" class="table table-striped table-bordered" cellspacing="0" width="100%">
                 <thead>
                     <tr>
                         <th data-name="tx_id">Transaction ID</th>
                         <th data-name="tx_type">Transaction Type</th>
                         <th data-name="cashier_address">Cashier Address</th>
                         <th data-name="amount">Amount</th>
                         <th data-name="description">Description</th>
                         <th data-name="timestamp">Timestamp</th>
                         <th data-name="verify">Verify</th>
                     </tr>
                 </thead>
                 <tfoot>
                     <tr>
                         <th data-name="tx_id">Transaction ID</th>
                         <th data-name="tx_type">Transaction Type</th>
                         <th data-name="cashier_address">Cashier Address</th>
                         <th data-name="amount">Amount</th>
                         <th data-name="description">Description</th>
                         <th data-name="timestamp">Timestamp</th>
                         <th data-name="verify">Verify</th>
                     </tr>
                 </tfoot>
                 <tbody></tbody>
             </table>
        </div>
        <div id="data_vis-tab" class="tab-pane fade">
            <canvas id="lineChart" width="400" height="300"></canvas>
        </div>
    </div>



       <!-- verify modal -->

<div class="modal fade bs-example-modal-lg" id="verifymodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                       <span aria-hidden="true">&times;</span>
                       <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">
                    Please input your eth address and password.
                </h4>
            </div>
            
            <!-- Modal Body -->
            <div class="modal-body">
                
                <form class="form-horizontal" id="verify-data" action="/" method="post">
                  
                  <div class="form-group">
                    <label class="col-sm-2 control-label" for="eth-Address">Eth Address</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="eth-Address" value="0x188726339b3d51bc45438dfb2bcceac8e9cc0068" disabled="disabled"/>
                    </div>
                  </div>
                  <div class="form-group">
                    <label  class="col-sm-2 control-label" for="password">Password</label>
                    <div class="col-sm-10">
                        <input type="password" class="form-control" id="password" placeholder="Password" required/>
                    </div>
                  </div>
                  
                </form>
                
            </div>
            
            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="sendVerify()">Add</button>
            </div>
        </div>
    </div>
</div>


    <script src="/javascript/Chart.bundle.min.js"></script>
    <script type="text/javascript">
    function applyWrongEntry( text ) {
        return [ '<del>', text, '</del>' ].join( '' );
    }

    function verifyTx(txId) {
        console.log(txId);
    }
    $( document ).ready( function () {
        var txsTable = $( '#txs-woff' ).dataTable( {
            order: [
                [ 0, "desc" ]
            ],
            ajax: {
                url: '/api/txs',
                dataSrc: ''
            },
            createdRow: ( row, data, index ) => {
                if ( !data.valid ) {
                    $( 'td', row ).addClass( 'deletedEntity' );
                }
            },
            columns: [ {
                data: ( source, type, val ) => {
                    return source.tx_id;
                }
            }, {
                data: ( source, type, val ) => {
                    var msg = source.tx_type === 0 ?
                        'Income' :
                        'Expense';
                    return source.valid ? msg : applyWrongEntry( msg );
                }
            }, {
                data: ( source, type, val ) => {
                    return source.valid ? source.cashier_address : applyWrongEntry( source.cashier_address );
                }
            }, {
                data: ( source, type, val ) => {
                    return source.valid ? source.amount : applyWrongEntry( source.amount );
                }
            }, {
                data: ( source, type, val ) => {
                    return source.valid ? source.description : applyWrongEntry( source.description );
                }
            }, {
                data: ( source, type, val ) => {
                    var dt = new Date( source.timestamp );
                    return source.valid ? dt.toString() : applyWrongEntry( dt.toString() );
                }
            }, {
                data: (source, type, val) => {
                    return '<button class="btn btn-primary" data-toggle="modal" data-target="#verifymodal" onclick="verifyTx(' + source.tx_id + ')">Verify</button>';
                }
            } ]
        } );

        var incomes = [];
        var expenses = [];
        var balances = [];
        var timestamps = [];

        $.ajax( {
            type: 'GET',
            url: '/api/tx/daily/all',
            dataType: 'JSON'
        } ).done( ( data ) => {
            data.forEach( ( a ) => {
                timestamps.push( a.timestamp );
                incomes.push( a.income );
                balances.push( a.balance );
                expenses.push( a.expense );

                var ctx = document.getElementById( "lineChart" );

                var data = {
                    labels: timestamps,
                    datasets: [ {
                        label: "income",
                        fill: false,
                        lineTension: 0.1,
                        backgroundColor: "rgba(75,192,192,1)",
                        borderColor: 'rgba(0, 0, 255, 1)',
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderColor: 'rgba(153, 102, 255, 1)',
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(75,192,192,1)",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: incomes,
                        spanGaps: false,
                        lineTension: 0
                    }, {
                        label: "expense",
                        fill: false,
                        lineTension: 0.1,
                        backgroundColor: "rgba(75,192,192,1)",
                        borderColor: 'rgba(255 , 0, 0, 1)',
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderColor: 'rgba(153, 102, 255, 1)',
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(75,192,192,1)",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: expenses,
                        spanGaps: false,
                        lineTension: 0
                    }, {
                        label: "balance",
                        fill: false,
                        lineTension: 0.1,
                        backgroundColor: "rgba(75,192,192,1)",
                        borderColor: 'rgba(255, 255, 0, 1)',
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderColor: 'rgba(153, 102, 255, 1)',
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(75,192,192,1)",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: balances,
                        spanGaps: false,
                        lineTension: 0
                    } ]
                }

                var lineChart = new Chart( ctx, {
                    type: 'line',
                    data: data,
                    options: {
                        scales: {
                            yAxes: [ {
                                ticks: {
                                    beginAtZero: true
                                }
                            } ]
                        }
                    }
                } );

            } );
        } );
    } );

    </script>
</body>
</html>
